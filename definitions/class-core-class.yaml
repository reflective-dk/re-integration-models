# Class Class
---
# id: Standard object id generated by platform on creation
mimeType: application/vnd.reflective-dk.object+json
registrations:
  - validity:
      - input:
          # Authoritative model - model: { id: model.id }
          # Responsible actor - actor: { id: actor.id }
          # This class is its own class
          class: class:core:class
          classId: class:core:class
          # It extends the Object class
          extends: class:core:object
          description: This class defines the properties of any class (itself included)
          properties:
            model:
              description: Relation to the model that owns this class
              type: simple
              dataType:
                type: relation
                target: class:core:model
            classId:
              description: A class has an id (\'class:<model-id>:<class-id>\')
              type: simple
              dataType:
                type: definition
                definition: classUrn
            extends:
              description: A class may explicitly extend another class (if not it extends the Object class)
              type: simple
              dataType:
                type: definition
                definition: classUrn
            description:
              description: A brief description of the purpose of this class
              type: simple
              dataType: string
            properties:
              description: Properties of this class (in addition to any inherited properties)
              type: map
              dataType:
                type: definition
                definition: propertyType
            definitions:
              description: Convenience data type declarations
              type: map
              dataType:
                type: definition
                definition: dataType
          definitions:
            classUrn:
              type: json
              schema:
                type: string
                pattern: ^class:[^:]+:[^:]+$
            propertyType:
              type: json
              schema:
                type: object
                properties:
                  description: { type: 'string' }
                  type: { type: 'string', enum: [ 'simple', 'map' ] }
                  dataType:
                    oneOf:
                      - type: string
                        enum: [ 'string', 'integer', 'float', 'boolean', 'dateTime' ]
                      - type: object    # dataType: relation
                        properties:
                          type: { type: 'string', pattern: 'relation' }
                          target: { type: 'string', pattern: '^class:[^:]+:[^:]+$' }
                        additionalProperties: false
                      - type: object    # dataType: definition
                        properties:
                          type: { type: 'string', pattern: 'definition' }
                          definition: { type: 'string' }
                        additionalProperties: false
                      - type: object    # dataType: json
                        properties:
                          type: { type: 'string', pattern: 'json' }
                          schema: { type: 'object' }
                        additionalProperties: false
            dataType:
              type: json
              schema:
                oneOf:
                  - type: string
                    enum: [ 'string', 'number', 'boolean', 'dateTime' ]
                  - type: object    # dataType: relation
                    properties:
                      type: { type: 'string', pattern: 'relation' }
                      target: { type: 'string', pattern: '^class:[^:]+:[^:]+$' }
                    additionalProperties: false
                  - type: object    # dataType: definition
                    properties:
                      type: { type: 'string', pattern: 'definition' }
                      definition: { type: 'string' }
                    additionalProperties: false
                  - type: object    # dataType: json
                    properties:
                      type: { type: 'string', pattern: 'json' }
                      schema: { type: 'object' }
                    additionalProperties: false
...
