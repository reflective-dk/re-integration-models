# Validation Result Class
---
# id: Standard object id generated by platform on creation
mimeType: application/vnd.reflective-dk.object+json
registrations:
  - validity:
      - input:
          # Authoritative model - model: { id: model.id }
          # Responsible actor - actor: { id: actor.id }
          class: class:core:class
          classId: class:core:validation-result
          extends: class:core:object
          name: ValidationResult
          description: >-
            This class defines the properties of a validation result. A validation
            result is the result of validating an object against its class schema
            and all the rules that are set to apply to that class. The validation
            is carried out on snapshot of the object, class and rules at a
            specified snapshot time (defaults to a 'now' snapshot).
          properties:
            subject:
              description: Object that was validated
              type: simple
              dataType:
                type: relation
                target: class:core:object
            subjectClass:
              description: Class of the subject at snapshot time
              type: simple
              dataType:
                type: definition
                definition: classUrn
            validations:
              type: map
              dataType:
                type: definition
                definition: validation
            snapshotKnownOn:
              description: \'Known on\' from the snapshot time
              type: simple
              dataType: dateTime
            snapshotValidOn:
              description: \'Valid on\' from the snapshot time
              type: simple
              dataType: dateTime
            timestamp:
              description: Actual time at which the validation was carried out
              type: simple
              dataType: dateTime
            severity:
              description: Highest severity among the listed validations
              type: simple
              dataType:
                type: definition
                definition: severity
          definitions:
            classUrn:
              type: json
              schema:
                type: string
                pattern: ^class:[^:]+:[^:]+$
            severity:
              type: json
              schema: { type: 'string', enum: [ 'fatal', 'error', 'warning', 'info' ] }
            validation:
              type: json
              schema:
                type: object
                properties:
                  severity: { type: 'string', enum: [ 'fatal', 'error', 'warning', 'info' ] }
                  error: {}
...
