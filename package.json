{
  "name": "re-integration-models",
  "version": "0.1.0",
  "description": "Integration models for the Reflective Platform",
  "main": "index.js",
  "scripts": {
    "tenant": "re tenant -r; re tenant -t",
    "context": "re context -r; re context -d base -e integration",
    "predeploy": "npm run build",
    "deploy": "npm run context; npm run drop; npm run create",
    "postdeploy": "sleep 1; npm run validate; npm run showvalidations",
    "drop": "re drop -e integration | jq '.'",
    "create": "cat build/objects.json | jq '.objects[].type = \"application/json\"' | re add -j - | jq '.objects | .[].id'",
    "validate": "echo '{ \"query\": { \"match\": { \"context.extension\": \"integration\" } } }' | re search -j - | re validate -j - > build/validation-results.json",
    "showvalidations": "npm run showvalidationlist; npm run showvalidationresult",
    "showvalidationlist": "cat build/validation-results.json | jq -c '.objects | .[].registrations[0].validity[0].input | { subjectId: .subject.id, subjectClass: (.subjectClass.id + \" (\" +.subjectClass.name + \")\"), severity: .severity, validations: .validations }'",
    "showvalidationresult": "cat build/validation-results.json | jq '.objects | [ .[].registrations[0].validity[0].input.validations | .[].severity ] | unique | if (. == [ \"none\" ]) then \"=== validation ok ===\" else \"=== VALIDATION FAILED: \" + (. | tostring) + \" ===\"end'",
    "prebuild": "npm run clean; mkdir ./build",
    "build": "./scripts/build-objects.js",
    "clean": "rm -Rf ./build",
    "test": "mocha --recursive"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/reflective-dk/re-integration-models.git"
  },
  "keywords": [
    "reflective",
    "rule",
    "type",
    "models"
  ],
  "author": "Reflective Code <code@reflective.dk>",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {
    "require-yml": "^1.3.1"
  },
  "devDependencies": {
    "re-core-cli": "git+ssh://git@github.com:reflective-dk/re-core-cli.git"
  }
}
